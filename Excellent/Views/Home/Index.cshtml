@model Excellent.Models.HomeViewModel

<form method="post" enctype="multipart/form-data">
    <div class="input-group mb-3">
        <input type="file" class="form-control fileUpload" id="excelFile" name="excelFile" required value="@Model.FileName">
        <input type="text" class="form-control" name="sheetName" placeholder="Sheet Name i.e Sheet1" required value="@Model.SheetName">
        <div class="input-group-append">
            <button class="btn btn-outline-secondary" type="submit">Submit</button>
        </div>
    </div>
</form>

@if (Model.Data != null && Model.IsSuccessfull)
{
    <div class="d-flex justify-content-center">
        <div id="Loader" class="my-5 spinner-border" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>

    <div id="ExcelDataTable" class="table-container" style="display:none;">
        <table class="table table-bordered table-hover">
            <thead class="thead-light">
                <tr>
                    @foreach (System.Data.DataColumn col in Model.Data.Columns)
                    {
                        <th>@col.Caption</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (System.Data.DataRow row in Model.Data.Rows)
                {
                    <tr>
                        @foreach (var cell in row.ItemArray)
                        {
                            <td>@cell.ToString()</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @section scripts{
        <script src="~/Scripts/jquery.doubleScroll.js"></script>
        <script>
            $(document).ready(function () {
                setTimeout(showContent, 1000);
            });

            function showContent() {
                $('#Loader').hide();
                $('#ExcelDataTable').show();
                $('.table-container').doubleScroll();
            }
        </script>
    }
}
else if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger" role="alert">
        @Html.Raw(Model.ErrorMessage)
    </div>
}